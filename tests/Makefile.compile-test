# Copyright (c) 2012, Thingsquare, www.thingsquare.com.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the Institute nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

all: clean
	@$(MAKE) summary

ifdef NUMCORES
  # User wants a certain number, respect that.
  CPUS := $(NUMCORES)
else ifneq (, $(shell which nproc))
  # Query the machine for the number of processors.
  CPUS := $(shell nproc)
else
  # Default to something suitable for a mid-range laptop.
  CPUS := 8
endif

# Make tests quiet unless running in CI or user specifies something else.
ifndef CI
  V ?= 1
  Q ?= @
  MAKEOPTIONS ?= V=$(V) Q=$(Q)
endif
ifdef BINARY_SIZE_LOGFILE
  SIZE_LOGFILE ?= BINARY_SIZE_LOGFILE=$(BINARY_SIZE_LOGFILE)
  PRINT_LOGFILE = sort -k 6 $(BINARY_SIZE_LOGFILE) -o $(BINARY_SIZE_LOGFILE) && cat $(BINARY_SIZE_LOGFILE)
endif
PRINT_LOGFILE ?= true
PRINT_DIR ?= --no-print-directory
MAKEOPTIONS += $(PRINT_DIR) $(SIZE_LOGFILE) WERROR=1 $(MAKE_EXTRA_OPTIONS)

ifdef RUN_FILE
  DEFINE_START = 3
endif
DEFINE_START ?= 2

# Rule for compiling examples.
# EXAMPLES has the form directory/target:define1=value1:define2=value2:...
# Mangle :, =, \, and '"' to get valid rule name.
DELIMIT1 := __@__
DELIMIT2 := _@-@_
DELIMIT3 := _@_@_
DELIMIT4 := _@@@_
QUOTE := "
EXAMPLES_TMP := $(subst \,$(DELIMIT4), $(subst $(QUOTE),$(DELIMIT3), $(subst =,$(DELIMIT2), $(subst :,$(DELIMIT1),$(EXAMPLES)))))

$(EXAMPLES_TMP):
	$(eval _exlist := $(subst $(DELIMIT1), ,$(subst $(DELIMIT2),=,$(subst $(DELIMIT3),$(QUOTE),$(subst $(DELIMIT4),\,$@)))))
	$(eval _blob := $(firstword $(_exlist)))
	$(eval _example := $(dir $(_blob)))
	$(eval _target := $(notdir $(_blob)))
ifdef RUN_FILE
	$(eval _runfile := $(wordlist 2,2,$(_exlist)))
else
	$(eval _runfile := true)
endif
	$(eval _defines := $(wordlist $(DEFINE_START),16,$(_exlist)))
	@echo Building: $(_example) $(_defines) for target $(_target)
	$(Q)($(MAKE) -C $(EXAMPLESDIR)/$(_example) $(_defines) TARGET=$(_target) $(MAKEOPTIONS) clean && \
          make -C $(EXAMPLESDIR)/$(_example) -j$(CPUS) $(_defines) TARGET=$(_target) $(MAKEOPTIONS) && \
          $(_runfile)) || \
         printf "%-75s %-40s %-20s TEST FAIL\n" "$(_example)" "$(_defines)" "$(_target)" >> summary

examples:
	@rm -f summary $(BINARY_SIZE_LOGFILE)
ifeq ($(CLANG_WARNINGS),1)
	@$(MAKE) MAKE_EXTRA_OPTIONS=CLANG=1 $(EXAMPLES_TMP)
	@rm -f $(BINARY_SIZE_LOGFILE)
endif
	@$(MAKE) $(EXAMPLES_TMP)

summary: examples
	@echo "========== Summary =========="
	@([ ! -f summary ] && $(PRINT_LOGFILE) && echo "All tests OK" && touch summary) || \
          (echo "Failures:" && cat summary && false)

clean:
	@rm -f summary $(BINARY_SIZE_LOGFILE)
	@$(foreach example, $(EXAMPLES), \
           $(foreach target, $(EXAMPLESTARGETS), \
             (cd $(EXAMPLESDIR)/$(example) && $(MAKE) TARGET=$(target) clean);))
